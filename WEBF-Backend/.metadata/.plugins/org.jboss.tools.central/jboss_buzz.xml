<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>Service task repository integrated into Business Central</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/9Idi-q-SZ1c/service-task-repository-integrated-into.html" /><category term="feed_group_name_jbossjbpmcommunity" scheme="searchisko:content:tags" /><category term="feed_name_swiderskimaciej" scheme="searchisko:content:tags" /><author><name>Maciej Swiderski</name></author><id>searchisko:content:id:jbossorg_blog-service_task_repository_integrated_into_business_central</id><updated>2019-01-11T15:58:07Z</updated><published>2019-01-11T15:58:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;Service tasks (aka work items) are of tremendous use in business processes. Users can build their custom logic into well defined tasks that can be reused across processes or even projects. jBPM comes with rather large set of service tasks out of the box, you can explore them in jbpm-work-items repository in GitHub.&lt;br /&gt;&lt;br /&gt;jBPM also provides standalone service repo that could be used from jBPM designer to import service tasks. Though that was just intermediate step towards better integration with authoring tooling - Business Central.&lt;br /&gt;&lt;br /&gt;Brand new integration between service task repository and business central is under development and I'd like to share a bit of news about this upcoming feature...&lt;br /&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;Service Task administration&lt;/h3&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-oz34w49GVP8/XDi5pbM9cDI/AAAAAAAABkk/ixkx16pgOTcvrdLU1ap3WJz7Zmd4tkGNwCLcBGAs/s1600/Screenshot%2B2019-01-11%2Bat%2B16.30.18.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="875" data-original-width="1600" height="350" src="https://1.bp.blogspot.com/-oz34w49GVP8/XDi5pbM9cDI/AAAAAAAABkk/ixkx16pgOTcvrdLU1ap3WJz7Zmd4tkGNwCLcBGAs/s640/Screenshot%2B2019-01-11%2Bat%2B16.30.18.png" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;First and foremost there is global administration of service tasks. This allows to select what service tasks (that the authoring environment comes with) are allowed to be installed in projects.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-jFwj50U8-JE/XDi5rbNHt2I/AAAAAAAABko/5VIQ9qfXT_8JC3jU4X62ZRfbN8BMz5WUwCLcBGAs/s1600/Screenshot%2B2019-01-11%2Bat%2B16.30.37.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="847" data-original-width="1600" height="338" src="https://1.bp.blogspot.com/-jFwj50U8-JE/XDi5rbNHt2I/AAAAAAAABko/5VIQ9qfXT_8JC3jU4X62ZRfbN8BMz5WUwCLcBGAs/s640/Screenshot%2B2019-01-11%2Bat%2B16.30.37.png" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;There are three configuration options&lt;br /&gt;&lt;div&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;Install as Maven artefact - will upload the jar file of the handler if it does not exist in the local or Business Central's maven repo&lt;/li&gt;&lt;li&gt;Install service tasks artefact as maven dependency of project - will update pom.xml of project upon installation of the service task&lt;/li&gt;&lt;li&gt;Use version range - when adding service task artefact as project dependency it will use version range instead of fixed version e.g. [7.16,) instead of 7.16.0.Final&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3 style="text-align: left;"&gt;Service task installation - project settings&lt;/h3&gt;Once the service tasks are enabled they can be used within projects. Simply go into project settings page and install (or uninstall) service tasks of your desire. Note that this settings page will only list service tasks that are globally enabled.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-cMuOzc2zyDE/XDi5s5PNZUI/AAAAAAAABks/sviE5wsAOtoYa8OhA6ge2OZUrhSK6tiJQCLcBGAs/s1600/Screenshot%2B2019-01-11%2Bat%2B16.33.47.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="691" data-original-width="1600" height="276" src="https://1.bp.blogspot.com/-cMuOzc2zyDE/XDi5s5PNZUI/AAAAAAAABks/sviE5wsAOtoYa8OhA6ge2OZUrhSK6tiJQCLcBGAs/s640/Screenshot%2B2019-01-11%2Bat%2B16.33.47.png" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;Service tasks can then be installed into projects. During installation following will be done&lt;br /&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;dedicated wid (work definition) file is created for installed service task&lt;/li&gt;&lt;li&gt;custom icon for the service task is installed into project resources (if exists)&lt;/li&gt;&lt;li&gt;pom.xml of the project is updated to include dependencies (if it is enabled in the global settings)&lt;/li&gt;&lt;li&gt;deployment descriptor is updated to register work item handler for the service task&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;Similar steps are performed for uninstallation though to remove rather than add configuration.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Here is a short video (this time with audio.. not sure if that is good or bad ...) that illustrates the entire feature working together, including use of service task in business process.&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="" frameborder="0" height="315" src="https://www.youtube.com/embed/DKCallzn6-o" width="560"&gt;&lt;/iframe&gt; &lt;br /&gt;This is part one of this feature so stay tuned for more updates in coming weeks...&lt;/div&gt;&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/9Idi-q-SZ1c" height="1" width="1" alt=""/&gt;</content><summary>Service tasks (aka work items) are of tremendous use in business processes. Users can build their custom logic into well defined tasks that can be reused across processes or even projects. jBPM comes with rather large set of service tasks out of the box, you can explore them in jbpm-work-items repository in GitHub. jBPM also provides standalone service repo that could be used from jBPM designer to...</summary><dc:creator>Maciej Swiderski</dc:creator><dc:date>2019-01-11T15:58:00Z</dc:date><feedburner:origLink>http://mswiderski.blogspot.com/2019/01/service-task-repository-integrated-into.html</feedburner:origLink></entry><entry><title>Knative: Deep Dive, from Installation to Deployment</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/iAObrEhBg-c/" /><category term="Announcement" scheme="searchisko:content:tags" /><category term="devnation" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="serverless" scheme="searchisko:content:tags" /><author><name>David David</name></author><id>searchisko:content:id:jbossorg_blog-knative_deep_dive_from_installation_to_deployment</id><updated>2019-01-11T15:00:38Z</updated><published>2019-01-11T15:00:38Z</published><content type="html">&lt;p&gt;Join the Red Hat DevNation for an upcoming live tech talk on &lt;a href="http://app.engage.redhat.com/e/er?s=1795&amp;#38;lid=108312&amp;#38;elqTrackId=06d3d828d4e64472a537b723a7cccdfb&amp;#38;elq=6a3af68c6f0a4744a61c3b0ef311de78&amp;#38;elqaid=58613&amp;#38;elqat=1" target="_blank" rel="noopener" data-saferedirecturl="https://www.google.com/url?q=http://app.engage.redhat.com/e/er?s%3D1795%26lid%3D108312%26elqTrackId%3D06d3d828d4e64472a537b723a7cccdfb%26elq%3D6a3af68c6f0a4744a61c3b0ef311de78%26elqaid%3D58613%26elqat%3D1&amp;#38;source=gmail&amp;#38;ust=1547218369029000&amp;#38;usg=AFQjCNENxRTMVTjs7Bb277D2nqzOm5uBsQ"&gt;January 17th, 2019 at 12:00pm EST for &amp;#8211; Knative deep dive&lt;/a&gt; presented by Kamesh Sampath.&lt;/p&gt; &lt;p&gt;Reusable components that focus on solving many mundane but difficult tasks like orchestrating source-to-container workflows, routing and managing traffic during deployment, autoscaling your workloads, or binding running services to eventing ecosystems free developers to work on more interesting coding.&lt;/p&gt; &lt;p&gt;In this webinar, we’ll install &lt;a href="https://developers.redhat.com/topics/knative"&gt;Knative&lt;/a&gt; and its components and take an in-depth look into:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;The building blocks of Knative—such as serving, building and eventing ecosystems.&lt;/li&gt; &lt;li&gt;Demystify the deployment model that allows you to deploy your cloud-native services on Kubernetes and easily turn serve them as &lt;a href="https://developers.redhat.com/topics/serverless-architecture"&gt;serverless services&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;Various deployment strategies, such as latest and pinned, and how to use Knative build to convert a source-to-URL (serverless service).&lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;&lt;a href="https://onlinexperiences.com/scripts/Server.nxp?LASCmd=AI:4;F:QS!10100&amp;#38;ShowUUID=8D2FDBD4-0346-4818-A116-F06B8A8AEE3C&amp;#38;AffiliateData=701f2000001D6D4AAK"&gt;&lt;strong&gt;Register to attend&lt;/strong&gt;&lt;/a&gt;&lt;/h3&gt; &lt;h2&gt;Kamesh Sampath, director, Developer Experience, Red Hat&lt;/h2&gt; &lt;p&gt;Kamesh Sampath, Red Hat director of Developer Experience, is an evangelist on topics and technologies like Knative and Spring Boot on Kubernetes and OpenShift®, and he shares his knowledge on how to build better cloud-native applications using these technologies. Kamesh has spent a lot of time in the services industry helping customers build and deploy Java&lt;img src="https://s.w.org/images/core/emoji/2.4/72x72/2122.png" alt="™" class="wp-smiley" style="height: 1em; max-height: 1em;" /&gt; -based solutions. He’s the creator of vert.x-maven-plugin, and he’s been an active contributor to open source projects like Knative, Minishift, Eclipse Che, and fabric8, among others.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F11%2Fknative-deep-dive-from-installation-to-deployment%2F&amp;#38;linkname=Knative%3A%20Deep%20Dive%2C%20from%20Installation%20to%20Deployment" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F11%2Fknative-deep-dive-from-installation-to-deployment%2F&amp;#38;linkname=Knative%3A%20Deep%20Dive%2C%20from%20Installation%20to%20Deployment" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F11%2Fknative-deep-dive-from-installation-to-deployment%2F&amp;#38;linkname=Knative%3A%20Deep%20Dive%2C%20from%20Installation%20to%20Deployment" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F11%2Fknative-deep-dive-from-installation-to-deployment%2F&amp;#38;linkname=Knative%3A%20Deep%20Dive%2C%20from%20Installation%20to%20Deployment" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F11%2Fknative-deep-dive-from-installation-to-deployment%2F&amp;#38;linkname=Knative%3A%20Deep%20Dive%2C%20from%20Installation%20to%20Deployment" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F11%2Fknative-deep-dive-from-installation-to-deployment%2F&amp;#38;linkname=Knative%3A%20Deep%20Dive%2C%20from%20Installation%20to%20Deployment" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F11%2Fknative-deep-dive-from-installation-to-deployment%2F&amp;#38;linkname=Knative%3A%20Deep%20Dive%2C%20from%20Installation%20to%20Deployment" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F11%2Fknative-deep-dive-from-installation-to-deployment%2F&amp;#38;linkname=Knative%3A%20Deep%20Dive%2C%20from%20Installation%20to%20Deployment" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F11%2Fknative-deep-dive-from-installation-to-deployment%2F&amp;#038;title=Knative%3A%20Deep%20Dive%2C%20from%20Installation%20to%20Deployment" data-a2a-url="https://developers.redhat.com/blog/2019/01/11/knative-deep-dive-from-installation-to-deployment/" data-a2a-title="Knative: Deep Dive, from Installation to Deployment"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/01/11/knative-deep-dive-from-installation-to-deployment/"&gt;Knative: Deep Dive, from Installation to Deployment&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/iAObrEhBg-c" height="1" width="1" alt=""/&gt;</content><summary>Join the Red Hat DevNation for an upcoming live tech talk on January 17th, 2019 at 12:00pm EST for – Knative deep dive presented by Kamesh Sampath. Reusable components that focus on solving many mundane but difficult tasks like orchestrating source-to-container workflows, routing and managing traffic during deployment, autoscaling your workloads, or binding running services to eventing ecosystems ...</summary><dc:creator>David David</dc:creator><dc:date>2019-01-11T15:00:38Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/01/11/knative-deep-dive-from-installation-to-deployment/</feedburner:origLink></entry><entry><title>Apache Camel explained to Luke Skywalker</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/OEW2DlauXQw/apache-camel-explained-to-luke-skywalker.html" /><category term="apache camel" scheme="searchisko:content:tags" /><category term="feed_group_name_fusesource" scheme="searchisko:content:tags" /><category term="feed_name_clausibsen" scheme="searchisko:content:tags" /><author><name>Claus Ibsen</name></author><id>searchisko:content:id:jbossorg_blog-apache_camel_explained_to_luke_skywalker</id><updated>2019-01-11T12:55:01Z</updated><published>2019-01-11T12:55:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;div style="text-align: center;"&gt;&lt;span style="font-family: Arial, Helvetica, sans-serif;"&gt;A long time ago in a galaxy far,&lt;/span&gt;&lt;/div&gt;&lt;div style="text-align: center;"&gt;&lt;span style="font-family: Arial, Helvetica, sans-serif;"&gt;far away ...&lt;/span&gt;&lt;/div&gt;&lt;div style="text-align: center;"&gt;&lt;span style="font-family: Arial, Helvetica, sans-serif;"&gt;there was a a young boy,&lt;/span&gt;&lt;/div&gt;&lt;div style="text-align: center;"&gt;&lt;span style="font-family: Arial, Helvetica, sans-serif;"&gt;whom went to&lt;/span&gt;&lt;/div&gt;&lt;div style="text-align: center;"&gt;&lt;a href="https://twitter.com/HamillHimself/status/1083070331927986177"&gt;&lt;span style="font-family: Arial, Helvetica, sans-serif;"&gt;his first audition&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;&lt;div style="text-align: center;"&gt;...&amp;nbsp;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://twitter.com/HamillHimself/status/1083070331927986177"&gt;&lt;img border="0" data-original-height="384" data-original-width="581" height="211" src="https://4.bp.blogspot.com/-gpEl9ea4CNM/XDh8Ouw-iiI/AAAAAAAAB0s/OpLlveuerC47C5zpr5Mhq82yw3XzrggwgCLcBGAs/s320/luke-1.png" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;What a story. So Mark Hamill is addressed as Mr Camel. What an honour to have him in our Camel family and to be known as the first Mr Camel. The &lt;a href="https://twitter.com/camelfuse"&gt;2nd Mr Camel is our spirit animal&lt;/a&gt; for the Apache Camel project.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://twitter.com/camelfuse"&gt;&lt;img border="0" data-original-height="709" data-original-width="659" height="200" src="https://3.bp.blogspot.com/-15FZGlPk42g/XDiBV63khjI/AAAAAAAAB04/OZ_6PVpMbLU30afQm7GXwwAXguf1AraxQCLcBGAs/s200/mrcamel.png" width="185" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;Okay back to Luke Skywalker, so his tweet lead to people talking about Camel's and &lt;a href="https://twitter.com/pablogl/status/1083088233075040256"&gt;I was then brought into the conversation&lt;/a&gt; whether Mark's audition story was my inspiration for Apache Camel, which again lead to Mark Hamill (&lt;a href="https://en.wikipedia.org/wiki/Luke_Skywalker"&gt;Luke Skywalker&lt;/a&gt;) asking what Apache Camel is:&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://twitter.com/pablogl/status/1083088233075040256"&gt;&lt;img border="0" data-original-height="515" data-original-width="605" height="272" src="https://2.bp.blogspot.com/-jTkIBWDLQqQ/XDiPRhIco-I/AAAAAAAAB1k/9RxO0A1bcYMOV3kAiJbqpGhfRZ_3ENuEACLcBGAs/s320/luke-2.png" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;/div&gt;&lt;br /&gt;I must say I have never seen the day, where Luke Skywalker would ask me what &lt;a href="http://camel.apache.org/"&gt;Apache Camel&lt;/a&gt; is&amp;nbsp; - I am a great fan of Star Wars and yes I am so old that I favour the first 3 classic movies.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Explaining&amp;nbsp;what Apache Camel is to Luke Skywalker&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;At first though you may think that Apache Camel is a new model of the 4-legged walker with or without humps ... but it is &lt;b&gt;NOT&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://4.bp.blogspot.com/-Tyh2jxDkFAw/XDiDIcls3NI/AAAAAAAAB1M/_IjpWNDt5UEp_pHZFkT1iwHGW9UkJ96bACLcBGAs/s1600/walker.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="433" data-original-width="768" height="180" src="https://4.bp.blogspot.com/-Tyh2jxDkFAw/XDiDIcls3NI/AAAAAAAAB1M/_IjpWNDt5UEp_pHZFkT1iwHGW9UkJ96bACLcBGAs/s320/walker.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;Instead let us ask the most wise man in the universe, Yoda, for the answer:&lt;br /&gt;&lt;br /&gt;&lt;div style="text-align: center;"&gt;"Software that enables you to do integrations between other softwares, it is." - &lt;b&gt;Yoda&lt;/b&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;And in my humble words ...&lt;br /&gt;&lt;br /&gt;&lt;div style="text-align: center;"&gt;"What the force telekinesis does for universal Jedi connection ... the Apache Camel does for universal computer integration .... mindblow powers they are" - &lt;b&gt;DavsClaus&lt;/b&gt;&lt;/div&gt;&lt;div style="text-align: center;"&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style="text-align: left;"&gt;And here is&amp;nbsp;&lt;a href="https://twitter.com/matt_codes/status/1083293258871197696"&gt;another great explanation&lt;/a&gt;&amp;nbsp;from Matthew what Apache Camel is:&lt;/div&gt;&lt;div style="text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://4.bp.blogspot.com/-7xQ_pHRR2Uw/XDiGGOmAw8I/AAAAAAAAB1Y/unPTtoKdoY0EKZ8HJ2bJ3uLI02xY4Ak0QCLcBGAs/s1600/mule.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="119" data-original-width="589" height="80" src="https://4.bp.blogspot.com/-7xQ_pHRR2Uw/XDiGGOmAw8I/AAAAAAAAB1Y/unPTtoKdoY0EKZ8HJ2bJ3uLI02xY4Ak0QCLcBGAs/s400/mule.png" width="400" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div style="text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: left;"&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style="text-align: left;"&gt;&lt;b&gt;Has Luke Skywalker used Apache Camel?&lt;/b&gt;&lt;/div&gt;&lt;div style="text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: left;"&gt;Yes Mark you would unknowingly have used Apache Camel. Here is why.&amp;nbsp;&lt;/div&gt;&lt;div style="text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: left;"&gt;Apache Camel is a software project that has been around for over a decade. And its a very succesfull project and are thus widespread in use across all industries, enterprises, government institutions, and used in all parts of our planet.&lt;/div&gt;&lt;div style="text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: left;"&gt;In the US, for example, the &lt;a href="https://www.faa.gov/"&gt;FAA&lt;/a&gt; uses Camel in their services for air-traffic control. So anyone whom has been traveling by plane in the US airspace (covers 15% of the planet) would have used Camel.&lt;/div&gt;&lt;div style="text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: left;"&gt;Camel is also ubiquitous&amp;nbsp;used among banking and finance enterprises, so any US citizen whom has done bank transfers, credit card transactions etc would at one point have the banking systems exchange data via software with Camel included.&lt;/div&gt;&lt;div style="text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: left;"&gt;If you are a Netflix subscriber then their payment system is using Camel as well. If you have a parcel delivery by brown-trucks (UPS) then Camel is helping with the track and trace.&lt;/div&gt;&lt;div style="text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: left;"&gt;&lt;b&gt;Epilogue&lt;/b&gt;&lt;/div&gt;&lt;div style="text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: left;"&gt;Thank you Mark Hamill for asking me what Apache Camel is. I have been working on Apache Camel for more than 10 years and I still not able to explain it to the common man in a few words. Even trying to explain it to my peers in the IT industry is failing, evident by my &lt;a href="https://www.manning.com/books/camel-in-action-second-edition"&gt;last book&lt;/a&gt; is a staggering 900 page monster &lt;/div&gt;&lt;div style="text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: center;"&gt;&lt;span style="font-family: Arial, Helvetica, sans-serif;"&gt;May the force be with you&lt;/span&gt;&lt;/div&gt;&lt;div style="text-align: center;"&gt;&lt;span style="font-family: Arial, Helvetica, sans-serif;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=rA083IUWGvI:RniJi0cNmlY:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=rA083IUWGvI:RniJi0cNmlY:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?i=rA083IUWGvI:RniJi0cNmlY:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=rA083IUWGvI:RniJi0cNmlY:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?i=rA083IUWGvI:RniJi0cNmlY:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=rA083IUWGvI:RniJi0cNmlY:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?i=rA083IUWGvI:RniJi0cNmlY:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/ApacheCamel/~4/rA083IUWGvI" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/OEW2DlauXQw" height="1" width="1" alt=""/&gt;</content><summary>A long time ago in a galaxy far, far away ... there was a a young boy, whom went to his first audition ...  What a story. So Mark Hamill is addressed as Mr Camel. What an honour to have him in our Camel family and to be known as the first Mr Camel. The 2nd Mr Camel is our spirit animal for the Apache Camel project. Okay back to Luke Skywalker, so his tweet lead to people talking about Camel's and ...</summary><dc:creator>Claus Ibsen</dc:creator><dc:date>2019-01-11T12:55:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/ApacheCamel/~3/rA083IUWGvI/apache-camel-explained-to-luke-skywalker.html</feedburner:origLink></entry><entry><title>This week in JBoss (10th January 2019): 2019 already on fire!!!</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/OPbOROGhHPc/this-week-in-jboss-10th-january-2019-2019-already-on-fire" /><category term="Camel" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_weeklyeditorial" scheme="searchisko:content:tags" /><category term="gradle" scheme="searchisko:content:tags" /><category term="Hibernate" scheme="searchisko:content:tags" /><category term="java11" scheme="searchisko:content:tags" /><category term="keycloak" scheme="searchisko:content:tags" /><author><name>Romain Pelisse</name></author><id>searchisko:content:id:jbossorg_blog-this_week_in_jboss_10th_january_2019_2019_already_on_fire</id><updated>2019-01-10T16:49:51Z</updated><published>2019-01-10T16:48:10Z</published><content type="html">&lt;!-- [DocumentBodyStart:f87ddb45-3c27-4575-bc0e-8e07e2fcfa5d] --&gt;&lt;div class="jive-rendered-content"&gt;&lt;p style="text-indent: 0px;"&gt;&lt;span style="font-style: italic; color: #000000;"&gt;This new year has barely begun but the JBoss community is already running full steam ahead! But don&amp;#8217;t worry, this editorial will catch you up in no time.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="https://www.flickr.com/photos/timo_w2s/6977396713/in/photolist-bCyYXk-7mGNU-pEQ8of-2bMjgE1-7Ctfmd-S46YZK-9e8KsD-7BfB51-rnTQPU-beZWk4-dWbKE5-7BbNwX-X84xFa-hRoHKR-rjGewM-rrJWBU-7raXix-2buqENg-2cNXh11-QKnFcm-bsQ2gi-qFBAXD-jGPq5a-Eu4Q54-98Yvn2-jvHYnc-rN5NXS-zko4w-2a7AwE7-jGSqEo-2czD9F8-2buqFAZ-269fNvv-P8c1qg-s3nZHu-s3onLC-K3oUhE-73xwQ3-S7hCWT-bsQ2Fc-5TvCDD-qTv5YP-5TvBPz-5TvCRz-bMQXmk-dWK2DS-2cG3wEg-KSdmNX-KS7Dzz-KSdGfn" rel="nofollow"&gt;&lt;img alt="Fire" height="333" src="https://farm8.staticflickr.com/7064/6977396713_cdee6277fd.jpg" style="display: block; margin-left: auto; margin-right: auto;" width="500"/&gt;&lt;/a&gt;&lt;/p&gt;&lt;h2&gt;Wildfly has a new project lead!&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Let's start by some rather important community news: &lt;a class="jive-link-external-small" href="http://www.davsclaus.com/2019/01/apache-camel-2018-numbers.html" rel="nofollow"&gt;WildFly Project Lead is now Brian Stansberry&lt;/a&gt; ! Willdfly is a crucial project for the JBoss community but we are very lucky to see Brian Stansberry taking the lead here. He has been working for years and the project and he is a perfect fit for the position.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2 class="active_link" title="http://www.davsclaus.com/2019/01/apache-camel-2018-numbers.html"&gt;Winter is the perfect time to Hibernate!&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;January is the hear of Winter so it's only but fitting that the Hibernate community is quite active! First of all, the last weeks have seen quite a few interesting releases:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://in.relation.to/2018/12/19/hibernate-community-newsletter-2018-25/" rel="nofollow"&gt;Hibernate Validator 6.0.14.Final released&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://in.relation.to/2018/12/18/hibernate-ogm-5-4-1-Final-released/" rel="nofollow"&gt;Hibernate OGM 5.4.1.Final release&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://in.relation.to/2018/12/20/hibernate-search-5-11-0-Final/" rel="nofollow"&gt;Hibernate Search 5.11.0.Final is out!&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;But there was quite a lot more happening at the same time! If you want to catch up, just browse the last two community newsletters they've released:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://in.relation.to/2018/12/19/hibernate-community-newsletter-2018-25/" rel="nofollow"&gt;Hibernate Community Newsletter 25/2018&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://in.relation.to/2019/01/07/hibernate-community-newsletter-2019-01/" rel="nofollow"&gt;Hibernate Community Newsletter 01/2019&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;Evangelist's Corner&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Our very own Eric D.Schabell appears to have decided to skip the winter holidays altogether and just keep blogging and posting like a machine! Look at all the material he released in the past weeks:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://www.schabell.org/2018/12/integration-key-to-customer-experience-storage-services.html" rel="nofollow"&gt;Eric D. Schabell: Integration Key to Customer Experience - Storage Services&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://www.schabell.org/2018/12/2018-in-review-portfolio-architecture-and-storytelling.html" rel="nofollow"&gt;Eric D. Schabell: 2018 in review - Portfolio Architecture and storytelling&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://www.schabell.org/2019/01/modern-process-integration-tooling-workshop-lab02.html" rel="nofollow"&gt;Eric D. Schabell: Modern Process Integration Tooling Workshop - Lab 2 Create a New Project&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://www.schabell.org/2019/01/codemotion-rome-sharing-career-advice-and-cloud-pitfalls.html" rel="nofollow"&gt;Eric D. Schabell: Codemotion Rome - Sharing career advice and cloud pittfalls&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://www.schabell.org/2018/12/integraiton-key-to-customer-experience-container-platform.html" rel="nofollow"&gt;Eric D. Schabell: Integration Key to Customer Experience - Container Platform Essentials&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;Techbytes&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;By now, you should be all catch up with the news so let's now dive into some more technical topic. First, let's take a look at &lt;a class="jive-link-external-small" href="http://www.davsclaus.com/2019/01/apache-camel-2018-numbers.html" rel="nofollow"&gt;Securing an embedded Jetty server using Elytron&lt;/a&gt;. Or maybe &lt;a class="jive-link-external-small" href="http://blog.keycloak.org/2018/12/keycloak-480final-released.html" rel="nofollow"&gt;Using the Yeoman Camel-Project generator to jump start a project&lt;/a&gt; will be more up your alley? Eager for more? Well, look into &lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2018/12/18/openshift-java-s2i-builder-java-11-grade/" rel="nofollow"&gt;Building Java 11 and Gradle containers for OpenShift&lt;/a&gt; ! At least, but not the least, Eclipse Che 7 is coming and this series of articles will make you want to try it for sure:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2018/12/18/eclipse-che-7-coming-part-1/" rel="nofollow"&gt;Eclipse Che 7 is Coming and It&amp;#8217;s Really Hot (1/4) &lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2018/12/19/eclipse-che-7-is-coming-and-its-really-hot-2-4/" rel="nofollow"&gt;Eclipse Che 7 is Coming and It's Really Hot (2/4)&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2018/12/20/eclipse-che-7-is-coming-and-its-really-hot-3-4/" rel="nofollow"&gt;Eclipse Che 7 is Coming and It's Really Hot (3/4)&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2018/12/21/eclipse-che-7-is-coming-and-its-really-hot-4-4/" rel="nofollow"&gt;Eclipse Che 7 is Coming and It&amp;#8217;s Really Hot (4/4)&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;&lt;a href="https://www.flickr.com/photos/mtsrs/3768574359/in/photolist-eGkjAa-4C6zNZ-dt8TN8-Xtmb83-4twcon-6K1VRZ-c2BdGG-CcBuQ-WRBiUL-pyDZio-c2GQPW-qEvZ-CaJ2o-c2UN5C-c2FmJL-c2Fn4j-fK6r7i-7UXmAc-XMXYhF-9TPQx7-XRTVw4-93vNmZ-615DAC-2V6TTC-bzMR1-gLzBc-XopfrY-CcBxQ-7vVtt7-4tzh9U-c2FXnw-roSxQD-bPRFd-59y7YW-yUgWzd-6H2Yz9-4tB5G8-RbUDku-93wAiz-4wKW3L-5GfYBC-7G9S1s-4tyEYR-4tKWZh-2uhVWH-bb9cs6-ye3CBo-qZ1hme-c2AwK5-V7UcBt" rel="nofollow"&gt;&lt;img alt="Total eclipse" height="318" src="https://farm3.staticflickr.com/2568/3768574359_0904e722b0.jpg" style="display: block; margin-left: auto; margin-right: auto;" width="500"/&gt;&lt;/a&gt;&lt;/p&gt;&lt;h2 class="active_link" title="https://developers.redhat.com/blog/2018/12/19/security-considerations-for-container-runtimes/"&gt;Releases, releases, releases...&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;As you can see, the winter holidays has not slowed down the releases within the JBoss community:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://blog.keycloak.org/2018/12/keycloak-480final-released.html" rel="nofollow"&gt;Keycloak: Keycloak 4.8.0.Final Released&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://in.relation.to/2019/01/07/hibernate-validator-6014-final-out/" rel="nofollow"&gt;Hibernate Validator 6.0.14.Final released &lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://in.relation.to/2018/12/18/hibernate-ogm-5-4-1-Final-released/" rel="nofollow"&gt;Hibernate OGM 5.4.1.Final release&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://in.relation.to/2018/12/20/hibernate-search-5-11-0-Final/" rel="nofollow"&gt;Hibernate Search 5.11.0.Final is out!&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;Decaf'&lt;/h2&gt;&lt;p&gt;This editorial should contain enough "Java" to keep you up all night! So let's me conclude with something a bit less caffeinated, but that should still be quite interesting to most members of the JBoss community: &lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2018/12/19/security-considerations-for-container-runtimes/" rel="nofollow"&gt;Security Considerations for Container Runtimes&lt;/a&gt;.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;&lt;em&gt;That's all for this week's edition of the Editorial, please join us next time as we continue our journey through the JBoss Communities in search of interesting articles and news.&amp;#160; &lt;/em&gt;&lt;span class="jive-content-footer-item"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;&lt;!-- [DocumentBodyEnd:f87ddb45-3c27-4575-bc0e-8e07e2fcfa5d] --&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/OPbOROGhHPc" height="1" width="1" alt=""/&gt;</content><summary>This new year has barely begun but the JBoss community is already running full steam ahead! But don’t worry, this editorial will catch you up in no time. Wildfly has a new project lead!   Let's start by some rather important community news: WildFly Project Lead is now Brian Stansberry ! Willdfly is a crucial project for the JBoss community but we are very lucky to see Brian Stansberry taking the l...</summary><dc:creator>Romain Pelisse</dc:creator><dc:date>2019-01-10T16:48:10Z</dc:date><feedburner:origLink>https://developer.jboss.org/blogs/weekly-editorial/2019/01/10/this-week-in-jboss-10th-january-2019-2019-already-on-fire</feedburner:origLink></entry><entry><title>Open Source Contributor Experience</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/7hlWWUvVSyU/" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="open source" scheme="searchisko:content:tags" /><author><name>David David</name></author><id>searchisko:content:id:jbossorg_blog-open_source_contributor_experience</id><updated>2019-01-10T14:38:34Z</updated><published>2019-01-10T14:38:34Z</published><content type="html">&lt;p&gt;&lt;iframe class='youtube-player' type='text/html' width='640' height='360' src='https://www.youtube.com/embed/27vEfoXv0bE?version=3&amp;#038;rel=1&amp;#038;fs=1&amp;#038;autohide=2&amp;#038;showsearch=0&amp;#038;showinfo=1&amp;#038;iv_load_policy=1&amp;#038;wmode=transparent' allowfullscreen='true' style='border:0;'&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;p&gt;KubeCon 2018: Intro: Contributor Experience SIG &amp;#8211; &lt;a href="https://twitter.com/ParisInBmore"&gt;Paris Pittman&lt;/a&gt;, Google &amp;#38; &lt;a href="https://www.linkedin.com/in/elsie-phillips-0a197298/"&gt;Elsie Phillips&lt;/a&gt;, Red Hat&lt;/p&gt; &lt;p&gt;We will be covering what contributor experience is, how we help the project, the projects we are current working on (if the talk were today: mentoring, automated workflows, new contributor onboarding, communication pipelines, etc.), and how folks can get involved&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F10%2Fopen-source-contributor-experience%2F&amp;#38;linkname=Open%20Source%20Contributor%20Experience" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F10%2Fopen-source-contributor-experience%2F&amp;#38;linkname=Open%20Source%20Contributor%20Experience" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F10%2Fopen-source-contributor-experience%2F&amp;#38;linkname=Open%20Source%20Contributor%20Experience" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F10%2Fopen-source-contributor-experience%2F&amp;#38;linkname=Open%20Source%20Contributor%20Experience" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F10%2Fopen-source-contributor-experience%2F&amp;#38;linkname=Open%20Source%20Contributor%20Experience" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F10%2Fopen-source-contributor-experience%2F&amp;#38;linkname=Open%20Source%20Contributor%20Experience" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F10%2Fopen-source-contributor-experience%2F&amp;#38;linkname=Open%20Source%20Contributor%20Experience" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F10%2Fopen-source-contributor-experience%2F&amp;#38;linkname=Open%20Source%20Contributor%20Experience" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F10%2Fopen-source-contributor-experience%2F&amp;#038;title=Open%20Source%20Contributor%20Experience" data-a2a-url="https://developers.redhat.com/blog/2019/01/10/open-source-contributor-experience/" data-a2a-title="Open Source Contributor Experience"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/01/10/open-source-contributor-experience/"&gt;Open Source Contributor Experience&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/7hlWWUvVSyU" height="1" width="1" alt=""/&gt;</content><summary>KubeCon 2018: Intro: Contributor Experience SIG – Paris Pittman, Google &amp; Elsie Phillips, Red Hat We will be covering what contributor experience is, how we help the project, the projects we are current working on (if the talk were today: mentoring, automated workflows, new contributor onboarding, communication pipelines, etc.), and how folks can get involved The post Open Source Contributor Exper...</summary><dc:creator>David David</dc:creator><dc:date>2019-01-10T14:38:34Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/01/09/open-source-contributor-experience/</feedburner:origLink></entry><entry><title>Fall 2018 ISO WG21 C++ Standards Committee meeting trip report</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/gnEzCI68syM/" /><category term="C++" scheme="searchisko:content:tags" /><category term="Concurrency and Parallelism Study Group" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="LEWG" scheme="searchisko:content:tags" /><category term="Library Working Group" scheme="searchisko:content:tags" /><category term="Programming Languages" scheme="searchisko:content:tags" /><category term="SG1" scheme="searchisko:content:tags" /><category term="standards" scheme="searchisko:content:tags" /><category term="wg21" scheme="searchisko:content:tags" /><author><name>Thomas Rodgers</name></author><id>searchisko:content:id:jbossorg_blog-fall_2018_iso_wg21_c_standards_committee_meeting_trip_report</id><updated>2019-01-10T13:00:46Z</updated><published>2019-01-10T13:00:46Z</published><content type="html">&lt;p&gt;The fall C++ meeting was held in San Diego, CA. As usual, Red Hat sent three of us to the meeting: myself from the Concurrency and Parallelism Study Group (SG1), Jason Merrill from the Core Language Working Group, and Jonathan Wakely from the Library Working Group (LEWG).&lt;/p&gt; &lt;p&gt;SG1 had a fairly full plate but finished the week with a bit of breathing room to spare. This article describes the major topics discussed this week in SG1.&lt;/p&gt; &lt;p&gt;&lt;span id="more-551147"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Cooperatively interruptible joining threads, aka &amp;#8220;jthread&amp;#8221;&lt;/h2&gt; &lt;p&gt;This proposal has been making the rounds for a while, most recently at the SG1/LEWG meeting adjacent CppCon in September. At that meeting, the SG1 guidance to was to remove TLS, throwing wait functions, and add support to let jthread call a callable that takes either an interrupt token as an additional first argument or does not receive any interrupt token. The proposal authors, Nico Josuttis, Herb Sutter, and Anthony Williams, brought a revised paper &lt;a href="https://wg21.link/p0660r5"&gt;p0660R5&lt;/a&gt; to San Diego. Nico was not present at the Bellevue meeting and wanted to discuss this further as the authors have some new experience.&lt;/p&gt; &lt;p&gt;It was noted that interrupting&lt;code&gt; std::condition_variable&lt;/code&gt; waits is tricky, but that in the case of at least three library implementations, &lt;code&gt;std::condition_variable_any&lt;/code&gt; is much easier to interrupt and can &amp;#8220;do the right thing&amp;#8221; where a user couldn&amp;#8217;t from within a predicate.&lt;/p&gt; &lt;p&gt;There was also a significant discussion about adding a callback mechanism to interrupt tokens. Some concerns were raised that there could be ABI considerations if such mechanism isn&amp;#8217;t part of C++20&amp;#8217;s interrupt token mechanism.&lt;/p&gt; &lt;p&gt;Later in the week, SG1 reviewed &lt;a href="https://wg21.link/p1287r0"&gt;p1287R0&lt;/a&gt;, async use cases for &lt;code&gt;interrupt_token&lt;/code&gt;. This was a continuation of Monday&amp;#8217;s discussion of p0660R5/p0660R6. SG1 explored the potential foot-gunnery on offer with interrupt tokens having a callback mechanism. The remainder of the discussion centered around the callback design put forward in p1287R0.&lt;/p&gt; &lt;p&gt;SG1 voted that &amp;#8220;some merged version of p0660R6 and p1287R0&amp;#8221; could be freed from the clutches of SG1, pending a wording review at a future meeting.&lt;/p&gt; &lt;p&gt;I have started work on an experimental version of this functionality in &lt;code&gt;libstdc++&lt;/code&gt;.&lt;/p&gt; &lt;h2&gt;Executors&lt;/h2&gt; &lt;p&gt;SG1 devoted most of Monday and Tuesday to the discussion of the various executors-related papers.&lt;/p&gt; &lt;p&gt;First up was revision 9 of the Unified Executors Proposal for C++, aka &lt;a href="https://wg21.link/p0443r9"&gt;p0443R9&lt;/a&gt;. After much clarifying discussion and a discussion on whether &lt;code&gt;bulk_execute&lt;/code&gt; should be part of C++ executors, the p0443 executors with &lt;code&gt;bulk_execute&lt;/code&gt; were also freed from the clutches of SG1, pending review at a future meeting.&lt;/p&gt; &lt;p&gt;In Bellevue in September, it was decided that all dependent execution features of p0443 would be split to a separate paper not targeted at C++20. As requested in Bellevue, that paper was brought in the form of &lt;a href="https://wg21.link/p1244r0"&gt;p1244R0&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;One obvious thing you might like to do with executors is to have them integrate with the standard library algorithms. SG1 spent some time discussing a few papers related to this topic:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://wg21.link/p1019r1"&gt;p1019R1&lt;/a&gt;: Integrating Executors with Parallel Algorithms&lt;/li&gt; &lt;li&gt;&lt;a href="https://wg21.link/p1232r0"&gt;p1232R0&lt;/a&gt;: Integrating Executors with the Standard Library Through Customization&lt;/li&gt; &lt;li&gt;&lt;a href="https://wg21.link/p1194r0"&gt;p1194R0&lt;/a&gt; Experience Report: Integrating Executors with Parallel Algorithms&lt;/li&gt; &lt;li&gt;D1348R0: An Executor Property for Occupancy of Execution Agents&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;The presentation of p1019R1 brought new material to a previous discussion of this paper and that was specifically to address a persistent question along the lines of &amp;#8220;We have executors; why do we also need execution policies?&amp;#8221; The discussion of p1019R1 explored this new material but no conclusions or firm direction were reached at this meeting.&lt;/p&gt; &lt;p&gt;P1232R0 proposes that the facilities of p0443R9 are insufficient to cover the needs of execution resources representing accelerators other than GPUs (for example, FPGAs). The paper proposes to essentially make every standard algorithm accepting an &lt;code&gt;execution_policy&lt;/code&gt; also support &lt;a href="https://wg21.link/n4381"&gt;n4381&lt;/a&gt; (aka &amp;#8220;ranges-style&amp;#8221;) extension points.&lt;/p&gt; &lt;p&gt;P1194R1 is an initial attempt to explore what would be involved in implementing an existing parallel algorithms implementation in terms of p0443R9 and p1019R1. This paper was mostly intended to be informational; I wasn&amp;#8217;t really expecting to present it. SG1 scheduled it for discussion nonetheless and that discussion in many ways was a continuation of the discussion of p1232R0. My general takeaway from the discussion is that we still don&amp;#8217;t know how to proceed toward allowing arbitrary executors to be supplied via p1019&amp;#8217;s &lt;code&gt;.on()&lt;/code&gt; mechanism and significantly more work is needed to understand how to proceed.&lt;/p&gt; &lt;p&gt;Not discussed in San Diego was the integration of executors and networking, the other obvious use case. Chris Kohlhoff brought a paper revising the Networking Technical Specification to permit custom  I/O executors, p1322R0. Detlef Vollmann also brought a paper proposing merging &amp;#8220;most&amp;#8221; of the Networking TS into the C++ working draft. Neither of these papers was discussed this week, due to LEWG declining to advance Networking toward the C++20 IS.&lt;/p&gt; &lt;h2&gt;Smaller papers discussed in SG1 during the San Diego meeting&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://wg21.link/p1258r0"&gt;P1258R0&lt;/a&gt; Don&amp;#8217;t Make C++ Unimplementable on Small CPUs: This paper is a response to a decision at the Rapperswil meeting to make at least one lock-free atomic integer type mandatory even in freestanding C++ implementations. This is problematic for certain reasonable modern CPUs that don&amp;#8217;t provide &lt;code&gt;atomic compare_exchange&lt;/code&gt; instructions. This paper spawned an additional evening discussion on what we should do about freestanding C++ implementations.&lt;/li&gt; &lt;li&gt;&lt;a href="https://wg21.link/p0468r1"&gt;P0468R1&lt;/a&gt; An Intrusive Smart Pointer: I did not attend the discussion for this paper, but there appears to have been consensus to move this toward C++23.&lt;/li&gt; &lt;li&gt;&lt;a href="https://wg21.link/p0335r1"&gt;P0335R1&lt;/a&gt; Context Tokens for Parallel Algorithms: This paper proposes an opt-in mechanism for customizing element access functions of a parallel algorithm by execution policy. I volunteered to prototype an implementation for &lt;code&gt;libstdc++&lt;/code&gt; to inform future discussion of this paper.&lt;/li&gt; &lt;li&gt;&lt;a href="https://wg21.link/p0918r2"&gt;P0918R2&lt;/a&gt; More &lt;code&gt;simd&amp;#60;&amp;#62;&lt;/code&gt; Operations: This paper proposes extending the set of portably defined SIMD operations from N4755. SG1 favors the operations in P0918R2 to be included in the next shipping vehicle for &lt;code&gt;simd&amp;#60;&amp;#62;&lt;/code&gt; operations (IS or TS) as determined by LEWG.&lt;/li&gt; &lt;li&gt;&lt;a href="https://wg21.link/p1241r0"&gt;P1241R0&lt;/a&gt; In Support of Merging Coroutines into C++20: I did not attend the discussion for this paper, and there are no minutes for it (was there a discussion?). See also plenary notes later on the status of coroutines.&lt;/li&gt; &lt;li&gt;&lt;a href="https://wg21.link/p1205r0"&gt;P1205R0&lt;/a&gt; Teleportation via &lt;code&gt;co_await&lt;/code&gt;: The gist of the paper and the discussion of it is that a coroutine may be suspended on one execution agent and resumed on another—possibly very surprising contexts. This can have correspondingly surprising consequences (for example, TLS isn&amp;#8217;t the same once the coroutine resumes; the coroutine is resumed in a signal handler with very different constraints on what is &amp;#8220;safe&amp;#8221; to do, etc.). The paper proposes to clarify the coroutine wording to make this sort of usage of a coroutine &lt;em&gt;implementation-defined&lt;/em&gt;.&lt;/li&gt; &lt;li&gt;&lt;a href="https://wg21.link/p1288r0"&gt;P1288R0&lt;/a&gt; Coroutine Concepts and Metafunctions: This paper proposes new concept definitions, type traits, and helpers to the standard library to support generic programming of awaitable types with coroutines. This paper provides the support/conceptual foundation for P1316R0 and P1171R0.&lt;/li&gt; &lt;li&gt;&lt;a href="https://wg21.link/p1316r0"&gt;P1316R0&lt;/a&gt; A &lt;code&gt;when_all()&lt;/code&gt; Operator for Coroutines: This proposes allowing waiting on multiple &lt;code&gt;co_await&lt;/code&gt; awaitables. The sense of the room was a &amp;#8220;Desire to see in C++ (eventually) &amp;#8230;&amp;#8221;&lt;/li&gt; &lt;li&gt;&lt;a href="https://wg21.link/p1171r0"&gt;P1171R0&lt;/a&gt; Synchronously Waiting on Asynchronous Operations: This proposes adding a &lt;code&gt;sync_wait()&lt;/code&gt; operator for coroutines that allows an arbitrary awaitable to be &lt;code&gt;co_await&lt;/code&gt;ed.&lt;/li&gt; &lt;li&gt;&lt;a href="https://wg21.link/p1261r0"&gt;P1261R0&lt;/a&gt; Supporting Pipelines in C++: I was not present for this paper&amp;#8217;s discussion. It seems to me that figuring out P1244R0, P1288R0, P1316R0, and P1171R0 gets C++ a long way towards a set of vocabulary types for building pipeline-like facilities.&lt;/li&gt; &lt;li&gt;&lt;a href="https://wg21.link/p1152r0"&gt;P1152R0&lt;/a&gt; Deprecating &lt;code&gt;volatile&lt;/code&gt;: The title of the paper pretty much sums up its contents. Discussion and polls were mostly about guidance that the paper author, JF Bastien, was requesting for a subsequent paper revision.&lt;/li&gt; &lt;li&gt;&lt;a href="https://wg21.link/p1202r0"&gt;P1202R0&lt;/a&gt; Asymmetric Fences: SG1 was interested in exploring this as a direction for a future concurrency TS, subject to further wording review.&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;LEWG and the Networking TS&lt;/h2&gt; &lt;p&gt;Prior to the San Diego meeting, there had been some hope that the Networking TS would be voted out of the LEWG toward the C++20 draft standard. That did not happen, as LEWG voted to target merging of the Networking TS in C++23.&lt;/p&gt; &lt;p&gt;This, combined with no concrete plans for how to make executors work with parallel algorithms, or what to do about &lt;code&gt;std::async()&lt;/code&gt; in an &amp;#8220;executors world&amp;#8221; substantially undermine the case for executors being part of C++20 as specified in &lt;a href="https://wg21.link/p0443"&gt;p0443&lt;/a&gt;, but as of now, some version of p0443 is still on track for C++20.&lt;/p&gt; &lt;h2&gt;Coroutines and plenary&lt;/h2&gt; &lt;p&gt;There was no consensus in Saturday&amp;#8217;s plenary to advance coroutines for inclusion in the C++20 draft. During the follow-up discussion, it was indicated that there was little likelihood that any new information could be made available by the winter meeting in Kona that would change the objection(s) to unanimous consent.&lt;/p&gt; &lt;h2&gt;Other resources&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/07/02/iso-cpp-summer-2018-core-language/"&gt;June 2018 ISO C++ Meeting Trip Report (Core Language)&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/category/c-plus-plus/"&gt;Other C++ articles on Red Hat Developers blog&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F10%2Ffall-2018-iso-wg21-c-standards-committee-meeting-trip-report%2F&amp;#38;linkname=Fall%202018%20ISO%20WG21%20C%2B%2B%20Standards%20Committee%20meeting%20trip%20report" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F10%2Ffall-2018-iso-wg21-c-standards-committee-meeting-trip-report%2F&amp;#38;linkname=Fall%202018%20ISO%20WG21%20C%2B%2B%20Standards%20Committee%20meeting%20trip%20report" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F10%2Ffall-2018-iso-wg21-c-standards-committee-meeting-trip-report%2F&amp;#38;linkname=Fall%202018%20ISO%20WG21%20C%2B%2B%20Standards%20Committee%20meeting%20trip%20report" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F10%2Ffall-2018-iso-wg21-c-standards-committee-meeting-trip-report%2F&amp;#38;linkname=Fall%202018%20ISO%20WG21%20C%2B%2B%20Standards%20Committee%20meeting%20trip%20report" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F10%2Ffall-2018-iso-wg21-c-standards-committee-meeting-trip-report%2F&amp;#38;linkname=Fall%202018%20ISO%20WG21%20C%2B%2B%20Standards%20Committee%20meeting%20trip%20report" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F10%2Ffall-2018-iso-wg21-c-standards-committee-meeting-trip-report%2F&amp;#38;linkname=Fall%202018%20ISO%20WG21%20C%2B%2B%20Standards%20Committee%20meeting%20trip%20report" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F10%2Ffall-2018-iso-wg21-c-standards-committee-meeting-trip-report%2F&amp;#38;linkname=Fall%202018%20ISO%20WG21%20C%2B%2B%20Standards%20Committee%20meeting%20trip%20report" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F10%2Ffall-2018-iso-wg21-c-standards-committee-meeting-trip-report%2F&amp;#38;linkname=Fall%202018%20ISO%20WG21%20C%2B%2B%20Standards%20Committee%20meeting%20trip%20report" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F10%2Ffall-2018-iso-wg21-c-standards-committee-meeting-trip-report%2F&amp;#038;title=Fall%202018%20ISO%20WG21%20C%2B%2B%20Standards%20Committee%20meeting%20trip%20report" data-a2a-url="https://developers.redhat.com/blog/2019/01/10/fall-2018-iso-wg21-c-standards-committee-meeting-trip-report/" data-a2a-title="Fall 2018 ISO WG21 C++ Standards Committee meeting trip report"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/01/10/fall-2018-iso-wg21-c-standards-committee-meeting-trip-report/"&gt;Fall 2018 ISO WG21 C++ Standards Committee meeting trip report&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/gnEzCI68syM" height="1" width="1" alt=""/&gt;</content><summary>The fall C++ meeting was held in San Diego, CA. As usual, Red Hat sent three of us to the meeting: myself from the Concurrency and Parallelism Study Group (SG1), Jason Merrill from the Core Language Working Group, and Jonathan Wakely from the Library Working Group (LEWG). SG1 had a fairly full plate but finished the week with a bit of breathing room to spare. This article describes the major topic...</summary><dc:creator>Thomas Rodgers</dc:creator><dc:date>2019-01-10T13:00:46Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/01/10/fall-2018-iso-wg21-c-standards-committee-meeting-trip-report/</feedburner:origLink></entry><entry><title>sig-big-data: Apache Spark and Apache Airflow on Kubernetes</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/u36v_JTVpyw/" /><category term="Apache Airflow" scheme="searchisko:content:tags" /><category term="Apache Spark" scheme="searchisko:content:tags" /><category term="Big Data" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="SIG" scheme="searchisko:content:tags" /><author><name>David David</name></author><id>searchisko:content:id:jbossorg_blog-sig_big_data_apache_spark_and_apache_airflow_on_kubernetes</id><updated>2019-01-09T21:08:19Z</updated><published>2019-01-09T21:08:19Z</published><content type="html">&lt;p&gt;&lt;iframe class='youtube-player' type='text/html' width='640' height='360' src='https://www.youtube.com/embed/bQx4JlUO4o8?version=3&amp;#038;rel=1&amp;#038;fs=1&amp;#038;autohide=2&amp;#038;showsearch=0&amp;#038;showinfo=1&amp;#038;iv_load_policy=1&amp;#038;wmode=transparent' allowfullscreen='true' style='border:0;'&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;p&gt;Deep Dive from KubeCon 2018: Big Data SIG &amp;#8211; &lt;a href="https://twitter.com/manyangled"&gt;Erik Erlandson&lt;/a&gt;, Red Hat &amp;#38; &lt;a href="https://twitter.com/liyinan926"&gt;Yinan Li&lt;/a&gt;, Google&lt;/p&gt; &lt;p&gt;This presentation will cover two projects from sig-big-data: Apache Spark on &lt;a href="https://developers.redhat.com/topics/kubernetes/"&gt;Kubernetes&lt;/a&gt; and Apache Airflow on Kubernetes. Kubernetes became a native scheduler backend for Spark in 2.3 and we have been working on expanding the feature set as well as hardening the integration since then. Apache Airflow on Kubernetes achieved a big milestone with the new Kubernetes Operator for natively launching arbitrary Pods and the Kubernetes Executor that is a Kubernetes native scheduler for Airflow. We will give an overview of the current state and present the roadmap of both projects, and give attendees opportunities to ask questions and provide feedback on roadmaps.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F09%2Fsig-big-data-apache-spark-and-apache-airflow-on-kubernetes%2F&amp;#38;linkname=sig-big-data%3A%20Apache%20Spark%20and%20Apache%20Airflow%20on%20Kubernetes" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F09%2Fsig-big-data-apache-spark-and-apache-airflow-on-kubernetes%2F&amp;#38;linkname=sig-big-data%3A%20Apache%20Spark%20and%20Apache%20Airflow%20on%20Kubernetes" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F09%2Fsig-big-data-apache-spark-and-apache-airflow-on-kubernetes%2F&amp;#38;linkname=sig-big-data%3A%20Apache%20Spark%20and%20Apache%20Airflow%20on%20Kubernetes" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F09%2Fsig-big-data-apache-spark-and-apache-airflow-on-kubernetes%2F&amp;#38;linkname=sig-big-data%3A%20Apache%20Spark%20and%20Apache%20Airflow%20on%20Kubernetes" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F09%2Fsig-big-data-apache-spark-and-apache-airflow-on-kubernetes%2F&amp;#38;linkname=sig-big-data%3A%20Apache%20Spark%20and%20Apache%20Airflow%20on%20Kubernetes" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F09%2Fsig-big-data-apache-spark-and-apache-airflow-on-kubernetes%2F&amp;#38;linkname=sig-big-data%3A%20Apache%20Spark%20and%20Apache%20Airflow%20on%20Kubernetes" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F09%2Fsig-big-data-apache-spark-and-apache-airflow-on-kubernetes%2F&amp;#38;linkname=sig-big-data%3A%20Apache%20Spark%20and%20Apache%20Airflow%20on%20Kubernetes" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F09%2Fsig-big-data-apache-spark-and-apache-airflow-on-kubernetes%2F&amp;#38;linkname=sig-big-data%3A%20Apache%20Spark%20and%20Apache%20Airflow%20on%20Kubernetes" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F09%2Fsig-big-data-apache-spark-and-apache-airflow-on-kubernetes%2F&amp;#038;title=sig-big-data%3A%20Apache%20Spark%20and%20Apache%20Airflow%20on%20Kubernetes" data-a2a-url="https://developers.redhat.com/blog/2019/01/09/sig-big-data-apache-spark-and-apache-airflow-on-kubernetes/" data-a2a-title="sig-big-data: Apache Spark and Apache Airflow on Kubernetes"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/01/09/sig-big-data-apache-spark-and-apache-airflow-on-kubernetes/"&gt;sig-big-data: Apache Spark and Apache Airflow on Kubernetes&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/u36v_JTVpyw" height="1" width="1" alt=""/&gt;</content><summary>Deep Dive from KubeCon 2018: Big Data SIG – Erik Erlandson, Red Hat &amp; Yinan Li, Google This presentation will cover two projects from sig-big-data: Apache Spark on Kubernetes and Apache Airflow on Kubernetes. Kubernetes became a native scheduler backend for Spark in 2.3 and we have been working on expanding the feature set as well as hardening the integration since then. Apache Airflow on Kubernet...</summary><dc:creator>David David</dc:creator><dc:date>2019-01-09T21:08:19Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/01/09/sig-big-data-apache-spark-and-apache-airflow-on-kubernetes/</feedburner:origLink></entry><entry><title>Running Kubernetes in the Federal Government</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/7mOD1o94FOU/" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift Container Platform" scheme="searchisko:content:tags" /><author><name>David David</name></author><id>searchisko:content:id:jbossorg_blog-running_kubernetes_in_the_federal_government</id><updated>2019-01-09T19:09:01Z</updated><published>2019-01-09T19:09:01Z</published><content type="html">&lt;p&gt;&lt;iframe class='youtube-player' type='text/html' width='640' height='360' src='https://www.youtube.com/embed/gBW1HAO8DFo?version=3&amp;#038;rel=1&amp;#038;fs=1&amp;#038;autohide=2&amp;#038;showsearch=0&amp;#038;showinfo=1&amp;#038;iv_load_policy=1&amp;#038;wmode=transparent' allowfullscreen='true' style='border:0;'&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;p&gt;KubeCon 2018: Running Kubernetes in the Federal Government &amp;#8211; &lt;a href="https://twitter.com/openshiftfed"&gt;John Osborne&lt;/a&gt;, Red Hat&lt;/p&gt; &lt;p&gt;Tackling security compliance is a long and challenging process for agencies, systems integrators, and vendors trying to launch new information systems in the federal government. Each new information system must go through the Risk Management Framework (RMF) created by the National Institute of Standards and Technology (NIST) in order to obtain authority to operate (ATO). This process is often long and tedious and can last for over a year. Open Control is a new standard by 18F, an agency bringing lean start-up methods to the U.S. Government, in order to address ATO repeatability. Red Hat has worked with 18F to help create a Kuberenetes implementation based on Open Control to automate much of the ATO process for Kubernetes systems.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F09%2Frunning-kubernetes-in-the-federal-government%2F&amp;#38;linkname=Running%20Kubernetes%20in%20the%20Federal%20Government" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F09%2Frunning-kubernetes-in-the-federal-government%2F&amp;#38;linkname=Running%20Kubernetes%20in%20the%20Federal%20Government" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F09%2Frunning-kubernetes-in-the-federal-government%2F&amp;#38;linkname=Running%20Kubernetes%20in%20the%20Federal%20Government" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F09%2Frunning-kubernetes-in-the-federal-government%2F&amp;#38;linkname=Running%20Kubernetes%20in%20the%20Federal%20Government" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F09%2Frunning-kubernetes-in-the-federal-government%2F&amp;#38;linkname=Running%20Kubernetes%20in%20the%20Federal%20Government" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F09%2Frunning-kubernetes-in-the-federal-government%2F&amp;#38;linkname=Running%20Kubernetes%20in%20the%20Federal%20Government" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F09%2Frunning-kubernetes-in-the-federal-government%2F&amp;#38;linkname=Running%20Kubernetes%20in%20the%20Federal%20Government" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F09%2Frunning-kubernetes-in-the-federal-government%2F&amp;#38;linkname=Running%20Kubernetes%20in%20the%20Federal%20Government" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F09%2Frunning-kubernetes-in-the-federal-government%2F&amp;#038;title=Running%20Kubernetes%20in%20the%20Federal%20Government" data-a2a-url="https://developers.redhat.com/blog/2019/01/09/running-kubernetes-in-the-federal-government/" data-a2a-title="Running Kubernetes in the Federal Government"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/01/09/running-kubernetes-in-the-federal-government/"&gt;Running Kubernetes in the Federal Government&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/7mOD1o94FOU" height="1" width="1" alt=""/&gt;</content><summary>KubeCon 2018: Running Kubernetes in the Federal Government – John Osborne, Red Hat Tackling security compliance is a long and challenging process for agencies, systems integrators, and vendors trying to launch new information systems in the federal government. Each new information system must go through the Risk Management Framework (RMF) created by the National Institute of Standards and Technolo...</summary><dc:creator>David David</dc:creator><dc:date>2019-01-09T19:09:01Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/01/09/running-kubernetes-in-the-federal-government/</feedburner:origLink></entry><entry><title>Using Red Hat Application Migration Toolkit to see the impact of migrating to OpenJDK</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/Ag4olIuLlkU/" /><category term="Developer Tools" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Java" scheme="searchisko:content:tags" /><category term="JDK 11" scheme="searchisko:content:tags" /><category term="JDK 8" scheme="searchisko:content:tags" /><category term="migration" scheme="searchisko:content:tags" /><category term="OpenJDK" scheme="searchisko:content:tags" /><category term="OpenJDK 8" scheme="searchisko:content:tags" /><category term="Red Hat Application Migration Toolkit" scheme="searchisko:content:tags" /><category term="Red Hat Application Migration Toolset" scheme="searchisko:content:tags" /><category term="rhamt" scheme="searchisko:content:tags" /><author><name>Syed M Shaaf</name></author><id>searchisko:content:id:jbossorg_blog-using_red_hat_application_migration_toolkit_to_see_the_impact_of_migrating_to_openjdk</id><updated>2019-01-09T15:00:17Z</updated><published>2019-01-09T15:00:17Z</published><content type="html">&lt;p&gt;Migrating from one software solution to another is a reality that all good software developers need to plan for. Having a plan helps to drive innovation at a continuous pace, whether you are developing software for in-house use or you are acquiring software from a vendor. In either case, never anticipating or planning for migration endangers the entire innovation value proposition. And in today&amp;#8217;s ever-changing world of software, everyone who wants to benefit from the success of the cloud has to ensure that cloud innovation is continuous. Therefore, maintaining a stack that is changing along with technological advancements is a necessity.&lt;/p&gt; &lt;p&gt;In this article, we will take a look at the impact of moving to OpenJDK and the results will aid in drawing further conclusions and in planning. It&amp;#8217;s quite common to be using a proprietary version of JDK, and this article addresses how to use &lt;a href="https://developers.redhat.com/products/rhamt/overview/"&gt;Red Hat Application Migration Toolkit&lt;/a&gt; to analyze your codebase to understand the impact of migrating to OpenJDK.&lt;/p&gt; &lt;p&gt;&lt;span id="more-549567"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;What is Red Hat Application Migration Toolkit?&lt;/h2&gt; &lt;p&gt;Red Hat Application Migration Toolkit is a customizable and extensible rules-based tool that looks for common resources and highlights technologies and known potential impact areas when migration is required. It can be used with tools like Maven, and it generates reports from its runs that you can view in a browser. It also has browser-based tooling for doing the same.&lt;/p&gt; &lt;p&gt;The goal is to provide a high-level view of the use of technologies like Java and how they can be migrated to the latest versions of OpenJDK or &lt;a href="https://developers.redhat.com/products/eap/overview/"&gt;Red Hat JBoss Enterprise Application Platform&lt;/a&gt; or even from other &lt;a href="https://developers.redhat.com/blog/category/containers/"&gt;containers&lt;/a&gt;. The goal is to give a general impact analysis that will aid in estimates, documentation, and migration. For more details on Red Hat Application Migration Toolkit, please visit the see the &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_application_migration_toolkit/4.2/html-single/getting_started_guide/#about_gs_guide"&gt;documentation&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;Getting started with Red Hat Application Migration Toolkit&lt;/h2&gt; &lt;p&gt;Red Hat Application Migration Toolkit has the following different interfaces. For the sake of simplicity, we will stick to the Maven example. In any case, the following links should help provide further information:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://access.redhat.com/documentation/en-us/red_hat_application_migration_toolkit/4.2/html-single/getting_started_guide/#about_cli"&gt;CLI&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://access.redhat.com/documentation/en-us/red_hat_application_migration_toolkit/4.2/html-single/getting_started_guide/#about_the_web_console"&gt;Web console&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://access.redhat.com/documentation/en-us/red_hat_application_migration_toolkit/4.2/html-single/getting_started_guide/#about_the_plugin"&gt;Eclipse plugin&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://access.redhat.com/documentation/en-us/red_hat_application_migration_toolkit/4.2/html-single/getting_started_guide/#about_maven"&gt;Maven plugin&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Let&amp;#8217;s get started. We will need to set up the prerequisites to run the Red Hat Application Migration Toolkit.&lt;/p&gt; &lt;h3&gt;Installing OpenJDK&lt;/h3&gt; &lt;p&gt;Red Hat Application Migration Toolkit has been tested on Linux, Windows, and macOS. Other operating systems with Java 8+ support should work equally well and Oracle JDK 8 will also work, assuming you have a running JDK setup.&lt;/p&gt; &lt;p&gt;If you are running &lt;a href="https://developers.redhat.com/products/rhel/overview/"&gt;Red Hat Enterprise Linux&lt;/a&gt; 7, &lt;code&gt;rpms&lt;/code&gt; can be found in the rhel&lt;code&gt;-7-server-&lt;/code&gt;rpms channel.&lt;/p&gt; &lt;p&gt;Run the following command to install OpenJDK:&lt;/p&gt; &lt;pre&gt;$ sudo yum install java-1.8.0-openjdk-devel.x86_64&lt;/pre&gt; &lt;p&gt;Detailed instructions on installing OpenJDK can also be found &lt;a href="https://developers.redhat.com/blog/2018/11/05/migrating-from-oracle-jdk-to-openjdk-on-red-hat-enterprise-linux-what-you-need-to-know/"&gt;here&lt;/a&gt;.  (See &lt;a href="https://developers.redhat.com/blog/2018/08/15/how-to-enable-sudo-on-rhel/"&gt;this article&lt;/a&gt; if you need to enable &lt;code&gt;sudo&lt;/code&gt;)&lt;/p&gt; &lt;h3&gt;Installing Maven&lt;/h3&gt; &lt;p&gt;Now we must also ensure that Maven is installed. First, download it &lt;a href="http://maven.apache.org/download.cgi"&gt;here&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Once it is downloaded, follow the instructions below, which assume you are running it on Red Hat Enterprise Linux.&lt;/p&gt; &lt;p&gt;Extract the ZIP archive to the directory where you wish to install Maven.&lt;/p&gt; &lt;p&gt;Open your &lt;code&gt;.bash_profile&lt;/code&gt; file in a terminal: &lt;code&gt;vi ~/.bash_profile&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Add the &lt;code&gt;M2_HOME&lt;/code&gt; environment variable to the file:&lt;/p&gt; &lt;pre&gt;export M2_HOME=/path/to/your/maven (this is where you have extracted maven archive)&lt;/pre&gt; &lt;p&gt;Now let&amp;#8217;s add the &lt;code&gt;bin&lt;/code&gt; directory of Maven to our path so we can use it on our system:&lt;/p&gt; &lt;pre&gt;export PATH=$M2_HOME/bin:$PATH&lt;/pre&gt; &lt;p&gt;Make sure that &lt;code&gt;JAVA_HOME&lt;/code&gt; is set to the location of your OpenJDK installation, for example:&lt;/p&gt; &lt;pre&gt;export JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk.x86_64&lt;/pre&gt; &lt;p&gt;Make sure that &lt;code&gt;$JAVA_HOME/bin&lt;/code&gt; is in your &lt;code&gt;PATH&lt;/code&gt; environment variable.&lt;/p&gt; &lt;p&gt;Save the file and exit your text editor.&lt;/p&gt; &lt;p&gt;Open a new terminal and run the following command to verify that Maven is installed successfully on your machine:&lt;/p&gt; &lt;pre&gt;$ mvn --version&lt;/pre&gt; &lt;p&gt;If you have, for example, the &lt;code&gt;epel-apache-maven&lt;/code&gt; repo, it also possible to install Maven via &lt;code&gt;yum&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Now that there is a running Java and Maven installation, let&amp;#8217;s get right to using Red Hat Application Migration Toolkit.&lt;/p&gt; &lt;p&gt;If you have a current Java project that needs to be analyzed great; otherwise, the following example project can be downloaded &lt;a href="https://github.com/sshaaf/jdk-migration-example"&gt;here&lt;/a&gt;.&lt;/p&gt; &lt;h3&gt;Running Red Hat Application Migration Toolkit&lt;/h3&gt; &lt;p&gt;Let&amp;#8217;s run through the example project to familiarize ourselves with the setup.&lt;/p&gt; &lt;p&gt;To use Red Hat Application Migration Toolkit in a project, add the following plugin to the &lt;code&gt;build&lt;/code&gt; section of the POM file. In the example project, this already exists.&lt;/p&gt; &lt;pre&gt;&amp;#60;plugin&amp;#62; &amp;#60;groupId&amp;#62;org.jboss.windup.plugin&amp;#60;/groupId&amp;#62; &amp;#60;artifactId&amp;#62;windup-maven-plugin&amp;#60;/artifactId&amp;#62; &amp;#60;version&amp;#62;4.2.0.Final&amp;#60;/version&amp;#62; &amp;#60;executions&amp;#62; &amp;#60;execution&amp;#62; &amp;#60;id&amp;#62;run-windup&amp;#60;/id&amp;#62; &amp;#60;phase&amp;#62;package&amp;#60;/phase&amp;#62; &amp;#60;goals&amp;#62; &amp;#60;goal&amp;#62;windup&amp;#60;/goal&amp;#62; &amp;#60;/goals&amp;#62; &amp;#60;/execution&amp;#62; &amp;#60;/executions&amp;#62; &amp;#60;configuration&amp;#62; &amp;#60;offlineMode&amp;#62;true&amp;#60;/offlineMode&amp;#62; &amp;#60;windupVersion&amp;#62;4.2.0.Final&amp;#60;/windupVersion&amp;#62; &amp;#60;/configuration&amp;#62; &amp;#60;/plugin&amp;#62;&lt;/pre&gt; &lt;p&gt;This will allow Red Hat Application Migration Toolkit to run during the builds.&lt;/p&gt; &lt;p&gt;Via the terminal, navigate to the project directory and use the following command to execute the build on the terminal.&lt;/p&gt; &lt;pre&gt;$ mvn clean install&lt;/pre&gt; &lt;h3&gt;Viewing the analysis report&lt;/h3&gt; &lt;p&gt;The build could take some time depending on the source. It will ensure that Red Hat Application Migration Toolkit is downloaded and will execute the analysis ending with a nice report. Once the build is finished, the results can be accessed via the following directory in the project:&lt;/p&gt; &lt;pre&gt;target/windup-report/index.html&lt;/pre&gt; &lt;p&gt;Let&amp;#8217;s go through the results by opening the page in a browser:&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/12/Screen-Shot-2018-12-18-at-10.30.00-AM.png"&gt;&lt;img class=" aligncenter wp-image-549637 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/12/Screen-Shot-2018-12-18-at-10.30.00-AM-1024x281.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/12/Screen-Shot-2018-12-18-at-10.30.00-AM-1024x281.png" alt="Opening the results in a browser" width="640" height="176" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/12/Screen-Shot-2018-12-18-at-10.30.00-AM-1024x281.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/12/Screen-Shot-2018-12-18-at-10.30.00-AM-300x82.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/12/Screen-Shot-2018-12-18-at-10.30.00-AM-768x211.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;In the browser, you can see areas of potential migration and also the application name. Click on “main,” which should navigate to the details page:&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/12/Screen-Shot-2018-12-18-at-10.29.48-AM.png"&gt;&lt;img class=" aligncenter wp-image-549627 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/12/Screen-Shot-2018-12-18-at-10.29.48-AM-1024x355.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/12/Screen-Shot-2018-12-18-at-10.29.48-AM-1024x355.png" alt="Details page" width="640" height="222" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/12/Screen-Shot-2018-12-18-at-10.29.48-AM-1024x355.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/12/Screen-Shot-2018-12-18-at-10.29.48-AM-300x104.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/12/Screen-Shot-2018-12-18-at-10.29.48-AM-768x266.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;When migrating from Oracle JDK to OpenJDK there will be differences based on the version of JDK. In the report shown above, the incidents, that is, APIs that will not work with OpenJDK, are reported. In the above example, &lt;code&gt;javafx&lt;/code&gt; from our application is reported, as are &lt;code&gt;crypto&lt;/code&gt; and &lt;code&gt;awt&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Let&amp;#8217;s take a more detailed look at what these incidents are by clicking the Issues tab.&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/12/Screen-Shot-2018-12-18-at-10.30.17-AM.png"&gt;&lt;img class=" aligncenter wp-image-549647 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/12/Screen-Shot-2018-12-18-at-10.30.17-AM-1024x593.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/12/Screen-Shot-2018-12-18-at-10.30.17-AM-1024x593.png" alt="Closer look at the incidences" width="640" height="371" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/12/Screen-Shot-2018-12-18-at-10.30.17-AM-1024x593.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/12/Screen-Shot-2018-12-18-at-10.30.17-AM-300x174.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/12/Screen-Shot-2018-12-18-at-10.30.17-AM-768x445.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The screenshot above shows clear explanations of incompatibilities when migrating from Oracle JDK to OpenJDK version 8. There are also details with links to the knowledge base as well as a description of what remedies can be made. These hints should give guidance and also help in estimating the efforts required to change the code on a class or per-line basis.&lt;/p&gt; &lt;p&gt;Taking it a bit further, as a project leader, you would also want to know the dependencies and how they map. Red Hat Application Migration Toolkit does that in detail for all the code it has analyzed. Following is another screenshot that illustrates this:&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/12/Screen-Shot-2018-12-18-at-10.30.29-AM.png"&gt;&lt;img class=" aligncenter wp-image-549657 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/12/Screen-Shot-2018-12-18-at-10.30.29-AM-1024x566.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/12/Screen-Shot-2018-12-18-at-10.30.29-AM-1024x566.png" alt="Dependencies and how they map" width="640" height="354" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/12/Screen-Shot-2018-12-18-at-10.30.29-AM-1024x566.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/12/Screen-Shot-2018-12-18-at-10.30.29-AM-300x166.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/12/Screen-Shot-2018-12-18-at-10.30.29-AM-768x424.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;The example above showcases some of the affected areas during a migration and the usefulness of Red Hat Application Migration Toolkit for such project.&lt;/p&gt; &lt;p&gt;There are many more interesting features. To read further, visit the documentation page &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_application_migration_toolkit/4.2/"&gt;here&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;If you would like to try the above example, it&amp;#8217;s also shared in the GitHub &lt;a href="https://github.com/sshaaf/jdk-migration-example.git"&gt;repo&lt;/a&gt; with the sample code and Maven POM file.&lt;/p&gt; &lt;h2&gt;Additional Resources&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/11/05/migrating-from-oracle-jdk-to-openjdk-on-red-hat-enterprise-linux-what-you-need-to-know/"&gt;Migrating from Oracle JDK to OpenJDK on Red Hat Enterprise Linux: What you need to know&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://www.redhat.com/en/blog/whats-new-red-hat-application-migration-toolkit-42-including-oraclejdk-openjdk-migration?source=bloglisting"&gt;What&amp;#8217;s new in Red Hat Application Migration Toolkit 4.2 including Oracle JDK to OpenJDK migration&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/06/01/an-introduction-to-red-hat-application-migration-toolkit/" rel="bookmark"&gt;An introduction to Red Hat Application Migration Toolkit&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F09%2Fusing-red-hat-application-migration-toolkit-to-see-the-impact-of-migrating-to-openjdk%2F&amp;#38;linkname=Using%20Red%20Hat%20Application%20Migration%20Toolkit%20to%20see%20the%20impact%20of%20migrating%20to%20OpenJDK" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F09%2Fusing-red-hat-application-migration-toolkit-to-see-the-impact-of-migrating-to-openjdk%2F&amp;#38;linkname=Using%20Red%20Hat%20Application%20Migration%20Toolkit%20to%20see%20the%20impact%20of%20migrating%20to%20OpenJDK" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F09%2Fusing-red-hat-application-migration-toolkit-to-see-the-impact-of-migrating-to-openjdk%2F&amp;#38;linkname=Using%20Red%20Hat%20Application%20Migration%20Toolkit%20to%20see%20the%20impact%20of%20migrating%20to%20OpenJDK" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F09%2Fusing-red-hat-application-migration-toolkit-to-see-the-impact-of-migrating-to-openjdk%2F&amp;#38;linkname=Using%20Red%20Hat%20Application%20Migration%20Toolkit%20to%20see%20the%20impact%20of%20migrating%20to%20OpenJDK" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F09%2Fusing-red-hat-application-migration-toolkit-to-see-the-impact-of-migrating-to-openjdk%2F&amp;#38;linkname=Using%20Red%20Hat%20Application%20Migration%20Toolkit%20to%20see%20the%20impact%20of%20migrating%20to%20OpenJDK" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F09%2Fusing-red-hat-application-migration-toolkit-to-see-the-impact-of-migrating-to-openjdk%2F&amp;#38;linkname=Using%20Red%20Hat%20Application%20Migration%20Toolkit%20to%20see%20the%20impact%20of%20migrating%20to%20OpenJDK" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F09%2Fusing-red-hat-application-migration-toolkit-to-see-the-impact-of-migrating-to-openjdk%2F&amp;#38;linkname=Using%20Red%20Hat%20Application%20Migration%20Toolkit%20to%20see%20the%20impact%20of%20migrating%20to%20OpenJDK" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F09%2Fusing-red-hat-application-migration-toolkit-to-see-the-impact-of-migrating-to-openjdk%2F&amp;#38;linkname=Using%20Red%20Hat%20Application%20Migration%20Toolkit%20to%20see%20the%20impact%20of%20migrating%20to%20OpenJDK" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F09%2Fusing-red-hat-application-migration-toolkit-to-see-the-impact-of-migrating-to-openjdk%2F&amp;#038;title=Using%20Red%20Hat%20Application%20Migration%20Toolkit%20to%20see%20the%20impact%20of%20migrating%20to%20OpenJDK" data-a2a-url="https://developers.redhat.com/blog/2019/01/09/using-red-hat-application-migration-toolkit-to-see-the-impact-of-migrating-to-openjdk/" data-a2a-title="Using Red Hat Application Migration Toolkit to see the impact of migrating to OpenJDK"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/01/09/using-red-hat-application-migration-toolkit-to-see-the-impact-of-migrating-to-openjdk/"&gt;Using Red Hat Application Migration Toolkit to see the impact of migrating to OpenJDK&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/Ag4olIuLlkU" height="1" width="1" alt=""/&gt;</content><summary>Migrating from one software solution to another is a reality that all good software developers need to plan for. Having a plan helps to drive innovation at a continuous pace, whether you are developing software for in-house use or you are acquiring software from a vendor. In either case, never anticipating or planning for migration endangers the entire innovation value proposition. And in today’s ...</summary><dc:creator>Syed M Shaaf</dc:creator><dc:date>2019-01-09T15:00:17Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/01/09/using-red-hat-application-migration-toolkit-to-see-the-impact-of-migrating-to-openjdk/</feedburner:origLink></entry><entry><title>Speeding up Open vSwitch with partial hardware offloading</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/TNV1CVxWNTs/" /><category term="Data Plane Development Kit" scheme="searchisko:content:tags" /><category term="dpdk" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="hardware offloading" scheme="searchisko:content:tags" /><category term="Infrastructure" scheme="searchisko:content:tags" /><category term="network function virtualization" scheme="searchisko:content:tags" /><category term="Networking" scheme="searchisko:content:tags" /><category term="NFV" scheme="searchisko:content:tags" /><category term="open virtual network" scheme="searchisko:content:tags" /><category term="Open vSwitch" scheme="searchisko:content:tags" /><category term="OpenStack" scheme="searchisko:content:tags" /><category term="openvswitch" scheme="searchisko:content:tags" /><category term="OVS" scheme="searchisko:content:tags" /><category term="performance" scheme="searchisko:content:tags" /><category term="Performance Improvements" scheme="searchisko:content:tags" /><category term="Red Hat Enterprise Linux" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift Container Platform" scheme="searchisko:content:tags" /><category term="virtual networking" scheme="searchisko:content:tags" /><author><name>Flavio Bruno Leitner</name></author><id>searchisko:content:id:jbossorg_blog-speeding_up_open_vswitch_with_partial_hardware_offloading</id><updated>2019-01-09T13:00:38Z</updated><published>2019-01-09T13:00:38Z</published><content type="html">&lt;p&gt;&lt;a href="http://www.openvswitch.org/"&gt;Open vSwitch (OVS)&lt;/a&gt; can use the kernel datapath or the userspace datapath. There are interesting developments in the kernel datapath using hardware offloading through the TC Flower packet classifier, but in this article, the focus will be on the userspace datapath accelerated with the Data Plane Development Kit (DPDK) and its new feature—&lt;em&gt;partial flow hardware offloading&lt;/em&gt;—to accelerate the virtual switch even more.&lt;/p&gt; &lt;p&gt;This article explains how the virtual switch worked before versus now and why the new feature can potentially save resources while improving the packet processing rate.&lt;/p&gt; &lt;p&gt;&lt;span id="more-541597"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;DPDK-accelerated OVS with and without flow hardware offloading&lt;/h2&gt; &lt;p&gt;Let&amp;#8217;s start by reviewing how DPDK-accelerated OVS works without flow hardware offloading. There should be one or more userspace threads responsible for constantly polling the network card for new packets, classifying them, and executing the respective actions. The demand for higher speeds never stops, and in order to be faster, each stage needs to do its part.&lt;/p&gt; &lt;p&gt;DPDK provides optimized methods to query for new packets, fetch any, and send them out if needed. It&amp;#8217;s the I/O part. Next is the packet classification, which comprises three stages in sequence.&lt;/p&gt; &lt;p&gt;The first stage is used when a packet is received that&amp;#8217;s called an EMC (Exact Match Cache). It is the fastest mechanism, as you would expect, but it also has limitations. The basic idea is to calculate a value (hash) that is specific to a packet and with that value search for the flow rule in the cache that contains the actions to be executed.&lt;/p&gt; &lt;p&gt;However, it is an expensive task to compute that hash value for each packet, so here comes the first example of hardware offloading, if hardware offloading is supported by the network card, which most do nowadays. Since version 2.5.0, OVS-DPDK uses the RSS hash provided by the network card to search the flow in the cache. Now we have extra cycles to get to the next packets!&lt;/p&gt; &lt;p&gt;As said above, however, the cache has its limitations, such as dealing with hash collisions, which requires parsing the packet headers to make sure it finds the correct flow. The cache also can&amp;#8217;t be too big or too small, so depending on the use case/traffic pattern, the cache might not be very efficient. There were improvements in this area, for example, the &amp;#8220;Conditional EMC Insert,&amp;#8221; but that is a topic for another article.&lt;/p&gt; &lt;p&gt;The ultimate goal for OVS-DPDK today is to push all the per-packet processing work (matching the packets to a specific flow rule and executing the corresponding actions) to the network cards. That would free system resources such as the main processors and memory to do other work, improve the packet processing speed while the virtual switch would be responsible for managing the cards and related tasks, for example, providing flow statistics. That&amp;#8217;s called Flow Hardware Offload, which is not there yet. But since OVS 2.10, experimental &lt;strong&gt;partial hardware offloading&lt;/strong&gt; has been available. It is disabled by default, and for now, it is limited to certain network cards and flows.&lt;/p&gt; &lt;p&gt;The idea with the experimental partial hardware offloading is that OVS-DPDK pushes flow rules along with unique marks to the network card, and the card will match packets belonging to each flow rule and mark them accordingly. Then the virtual switch will use each unique mark to find the specific flow rule and then execute the necessary actions in software. Although it seems a lot like the EMC described above, in this case, some expensive tasks are executed in the network card. For example, the virtual switch does not need to parse all the packet headers as it did before, because the mark is guaranteed to be unique, nor does it need to avoid the use of another level of cache in software if the number of flows is higher than EMC can handle.&lt;/p&gt; &lt;p&gt;In summary, OVS-DPDK leverages the network card flow MARK action&amp;#8217;s support in the hardware to skip some very costly CPU operations in the host. This way, OVS-DPDK can process even more packets or potentially reduce the number of processors bogged down with networking operations.&lt;/p&gt; &lt;p&gt;More information about OVS-DPDK and Flow Hardware Offload can be found in the &lt;a href="https://github.com/openvswitch/ovs/blob/master/Documentation/howto/dpdk.rst"&gt;project&amp;#8217;s documentation&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;Other resources&lt;/h2&gt; &lt;p&gt;The Red Hat Developer blog has other &lt;a href="https://developers.redhat.com/blog/?s=openvswitch"&gt;OVS&lt;/a&gt;  and &lt;a href="https://developers.redhat.com/blog/?s=OVN"&gt;OVN&lt;/a&gt; articles that might be of interest, including:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/06/14/debugging-ovs-dpdk-memory-issues/" rel="bookmark"&gt;Debugging Memory Issues with Open vSwitch DPDK&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2019/01/02/performance-improvements-in-ovn-past-and-future"&gt;Performance improvements in OVN: Past and future&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2017/06/28/ovs-dpdk-parameters-dealing-with-multi-numa/"&gt;OVS-DPDK Parameters: Dealing with multi-NUMA&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/03/16/ovs-dpdk-hugepage-memory/"&gt;Open vSwitch-DPDK: How Much Hugepage Memory?&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/12/07/ip-packet-buffering-in-ovn/"&gt;IP packet buffering in OVN&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/09/03/ovn-dynamic-ip-address-management"&gt;Dynamic IP Address Management in Open Virtual Network (OVN): Part One&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/11/08/how-to-create-an-open-virtual-network-distributed-gateway-router/" rel="bookmark"&gt;How to create an Open Virtual Network distributed gateway router&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/10/22/introduction-to-linux-interfaces-for-virtual-networking/" rel="bookmark"&gt;Introduction to Linux interfaces for virtual networking&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F09%2Fspeeding-up-open-vswitch-with-partial-hardware-offloading%2F&amp;#38;linkname=Speeding%20up%20Open%20vSwitch%20with%20partial%20hardware%20offloading" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F09%2Fspeeding-up-open-vswitch-with-partial-hardware-offloading%2F&amp;#38;linkname=Speeding%20up%20Open%20vSwitch%20with%20partial%20hardware%20offloading" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F09%2Fspeeding-up-open-vswitch-with-partial-hardware-offloading%2F&amp;#38;linkname=Speeding%20up%20Open%20vSwitch%20with%20partial%20hardware%20offloading" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F09%2Fspeeding-up-open-vswitch-with-partial-hardware-offloading%2F&amp;#38;linkname=Speeding%20up%20Open%20vSwitch%20with%20partial%20hardware%20offloading" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F09%2Fspeeding-up-open-vswitch-with-partial-hardware-offloading%2F&amp;#38;linkname=Speeding%20up%20Open%20vSwitch%20with%20partial%20hardware%20offloading" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F09%2Fspeeding-up-open-vswitch-with-partial-hardware-offloading%2F&amp;#38;linkname=Speeding%20up%20Open%20vSwitch%20with%20partial%20hardware%20offloading" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F09%2Fspeeding-up-open-vswitch-with-partial-hardware-offloading%2F&amp;#38;linkname=Speeding%20up%20Open%20vSwitch%20with%20partial%20hardware%20offloading" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F09%2Fspeeding-up-open-vswitch-with-partial-hardware-offloading%2F&amp;#38;linkname=Speeding%20up%20Open%20vSwitch%20with%20partial%20hardware%20offloading" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F09%2Fspeeding-up-open-vswitch-with-partial-hardware-offloading%2F&amp;#038;title=Speeding%20up%20Open%20vSwitch%20with%20partial%20hardware%20offloading" data-a2a-url="https://developers.redhat.com/blog/2019/01/09/speeding-up-open-vswitch-with-partial-hardware-offloading/" data-a2a-title="Speeding up Open vSwitch with partial hardware offloading"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/01/09/speeding-up-open-vswitch-with-partial-hardware-offloading/"&gt;Speeding up Open vSwitch with partial hardware offloading&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/TNV1CVxWNTs" height="1" width="1" alt=""/&gt;</content><summary>Open vSwitch (OVS) can use the kernel datapath or the userspace datapath. There are interesting developments in the kernel datapath using hardware offloading through the TC Flower packet classifier, but in this article, the focus will be on the userspace datapath accelerated with the Data Plane Development Kit (DPDK) and its new feature—partial flow hardware offloading—to accelerate the virtual sw...</summary><dc:creator>Flavio Bruno Leitner</dc:creator><dc:date>2019-01-09T13:00:38Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/01/09/speeding-up-open-vswitch-with-partial-hardware-offloading/</feedburner:origLink></entry></feed>
